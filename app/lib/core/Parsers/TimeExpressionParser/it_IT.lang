# *** use ONLY lowercase letters in lists: input will be forced to lowercase for comparison ***

# List month names; used whenever name of month needs to be displayed
monthList = [gennaio, febbraio, marzo, aprile, maggio, giugno, luglio, agosto, settembre, ottobre, novembre, dicembre]


# *** the following list of months is for display and *SHOULD* be capitalized where appropriate
monthListDisplay = [Gennaio, Febbraio, Marzo, Aprile, Maggio, Giugno, Luglio, Agosto, Settembre, Ottobre, Novembre, Dicembre]

# Hash table mapping acceptable month names to the display names defined in 'monthList'
monthTable = {
	gen = gennaio, gen. = gennaio,
	feb = febbraio, feb. = febbraio,
	mar = marzo, mar. = marzo,
	apr = aprile, apr. = aprile,
	mag = maggio, ma. = maggio
	giu = giugno, giu. = giugno,
	lug = luglio, lug. = luglio,
	ago = agosto, ago. = agosto,
	set = settembre, set. = settembre,
	ott = ottobre, ott. = ottobre,
	nov = novembre, nov. = novembre,
	dic = dicembre, dic. = dicembre
}

# List of day names, starting with Sunday
dayListDisplay = [Domenica, Lunedì, Martedì, Mercoledì, Giovedì, Venerdì, Sabato]

#rangePreConjunctions = [from, between]
rangePreConjunctions = [da, entro, tra, dal]
#rangeConjunctions = [to, -, and, .., through]
rangeConjunctions = [-, e, .., compreso, a, al] #promemoria variazione per VBC per togliere "fino a"

dateTimeConjunctions = [alle,@]

dateDelimiters = [/,-,.]
timeDelimiters = [:,.]

timeAMMeridian = am
timePMMeridian = pm

meridianTable = {
	a.m. = am,
	p.m. = pm
}

dateCircaIndicator = [circa, c, c., ca, ca.]
dateUncertaintyIndicator = [+-, ~]
dateUncertaintyYearIndicator = [a]
dateUncertaintyDayIndicator = [g]

# What to use to indicate a geological date ("millions of years ago")
dateMYA = [mya]

dateADIndicator =  D.C.
dateBCIndicator =  A.C.
ADBCTable = {
	d.c. = D.C.,
    a.c. = A.C.
}

#nowDate = [now]
nowDate = [adesso]
#todayDate = [today]
todayDate = [oggi]
#yesterdayDate = [yesterday]
yesterdayDate = [ieri]
#tomorrowDate = [tomorrow]
tomorrowDate = [domani]
undatedDate = [s.d.]

#presentDate = [present, ?, ??, ???, ????]
presentDate = [presente, ?, ??, ???, ????]
#beforeQualifier = [before]
beforeQualifier = [ante, prima]
#diedQualifier = [died, d, d.]
diedQualifier = [morto, m, m.]
#afterQualifier = [after]
afterQualifier = [post, dopo]
#bornQualifier = [born, b, b.]
bornQualifier = [nato, n, n.]

# Text to indicate century (as in "20th century")
#centuryIndicator = [century, jahrhundert, cent]
centuryIndicator = [secolo, sec.]

# Text to indicate decdae (as in "1920s")
decadeIndicator = [s]

# list of numeric suffixes, starting with the one for zero
# (eg. 0th, 1st, 2nd, 3rd would be a list like so: [th, st, nd, rd])
#ordinalSuffixes = [th, st, nd, rd]
ordinalSuffixes = [°]
ordinalSuffixDefault = °

# in delimited dates (ex. 12/10/2009) is the first number a month or a day?
# set to "0" for European style dates (day comes first); "1" for American-style dates (month comes first)
monthComesFirstInDelimitedDate = 0

# character(s) to append to day in full (not delimited) date
# eg. in the date "1. February 2009", "." is the daySuffix
# Note: you can put arbitrary text here - only punctuation
daySuffix = 

# Definite articles
definiteArticles = [il, la, le]

# Indefinite articles
indefiniteArticles = [un, uno, una]

# Seasons
winterSeason = [inverno]
springSeason = [primavera]
summerSeason = [estate]
autumnSeason = [autunno]
